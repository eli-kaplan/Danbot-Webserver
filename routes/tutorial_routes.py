from flask import Flask, request, render_template, Blueprint, flash, redirect, send_from_directory, jsonify

from utils.autocomplete import player_names
from utils import config
import json

tutorial_routes = Blueprint("tutorial_routes", __name__)

@tutorial_routes.route('/dink')
def dink():
    return render_template("tutorial_templates/dink.html", playernames=player_names())
    
@tutorial_routes.route('/dinkconfig')
def dink_config():
    dink_plugin_config = {
        "killCountInterval":1,
        "combatTaskEnabled":True,
        "gambleRareNotifMessage":"%USERNAME% has received rare loot at gamble count %COUNT%: \n\n%LOOT%",
        "speedrunEnabled":False,
        "questEnabled":True,
        "deathNotifMessage":"%USERNAME% has died...",
        "collectionNotifMessage":"%USERNAME% has added %ITEM% to their collection",
        "levelNotifyVirtual":True,
        "questNotifMessage":"%USERNAME% has completed a quest: %QUEST%",
        "killCountEnabled":True,
        "slayerNotifMessage":"%USERNAME% has completed a slayer task: %TASK%, getting %POINTS% points and making that %TASKCOUNT% tasks completed",
        "levelInterval":1,
        "notifyTrades":False,
        "speedrunMessage":"%USERNAME% has just finished a speedrun of %QUEST% with a time of %TIME% (their PB is %BEST%)",
        "sendDiscordUser":True,
        "clueSendImage":True,
        "chatNotifyMessage":"%USERNAME% received a chat message:\n\n```\n%MESSAGE%\n```",
        "slayerEnabled":True,
        "deathEnabled":True,
        "combatTaskUnlockMessage":"%USERNAME% has unlocked the rewards for the %COMPLETED% tier, by completing the combat task: %TASK%",
        "deathMinValue":0,
        "lootIncludeClueScrolls":True,
        "pkIncludeLocation":True,
        "lootIcons":False,
        "lootEnabled":True,
        "petNotifMessage":"%USERNAME% %GAME_MESSAGE%",
        "nameFilterMode":"DENY",
        "lootRarityThreshold":0,
        "maxRetries":3,
        "speedrunPBOnly":False,
        "embedFooterText":"Powered by Dink",
        "includeLocation":True,
        "groupStorageNotifyMessage":"%USERNAME% has deposited:\n%DEPOSITED%\n\n%USERNAME% has withdrawn:\n%WITHDRAWN%",
        "deathEmbedProtected":False,
        "diarySendImage":True,
        "questSendImage":True,
        "killCountSendImage":True,
        "sendGroupIronClanName":True,
        "speedrunSendImage":False,
        "lootRarityValueIntersection":False,
        "levelEnabled":True,
        "petEnabled":True,
        "chatMessageTypes":["GAME"],
        "tradeMinValue":0,
        "slayerPointThreshold":0,
        "petSendImage":True,
        "groupStorageMinValue":0,
        "embedFooterIcon":"https://github.com/pajlads/DinkPlugin/raw/master/icon.png",
        "killCountInitial":True,
        "combatTaskSendImage":True,
        "lootSendImage":True,
        "pkSendImage":True,
        "deathNotifPvpEnabled":True,
        "gambleInterval":100,
        "combatTaskMessage":"%USERNAME% has completed %TIER% combat task: %TASK%",
        "ignoreSeasonalWorlds":False,
        "collectionLogEnabled":True,
        "grandExchangeSendImage":True,
        "speedrunPBMessage":"%USERNAME% has just beat their personal best in a speedrun of %QUEST% with a time of %TIME%",
        "screenshotHideChat":False,
        "deathSendImage":True,
        "diaryMinDifficulty":"EASY",
        "lootImageMinValue":0,
        "clueMinTier":"BEGINNER",
        "pkNotifyMessage":"%USERNAME% has PK\u0027d %TARGET%",
        "baseRetryDelay":2000,
        "killCountPenanceQueen":True,
        "clueImageMinValue":0,
        "deathIgnoreSafe":True,
        "levelMinValue":1,
        "levelIntervalOverride":0,
        "grandExchangeProgressSpacingMinutes":-1,
        "gambleSendImage":True,
        "pkEnabled":True,
        "imageWriteTimeout":30,
        "gambleNotifMessage":"%USERNAME% has reached %COUNT% high gambles",
        "clueNotifMessage":"%USERNAME% has completed a %CLUE% clue, they have completed %COUNT%.\nThey obtained:\n\n%LOOT%",
        "gambleRareLoot":True,
        "clueEnabled":True,
        "clueMinValue":0,
        "levelSendImage":True,
        "deathIgnoredRegions":"123, 456, 789",
        "chatSendImage":True,
        "groupStorageIncludeClan":True,
        "pkSkipSafe":True,
        "levelNotifyCombat":False,
        "sendClanName":True,
        "playerLookupService":"OSRS_HISCORE",
        "threadNameTemplate":"[%TYPE%] %MESSAGE%",
        "discordWebhook":f"https://{config.get_server_ip()}/dink",
        "tradeNotifyMessage":"%USERNAME% traded with %COUNTERPARTY%",
        "lootIncludePlayer":False,
        "combatTaskMinTier":"EASY",
        "grandExchangeIncludeCancelled":False,
        "deathSafeExceptions":["FIGHT_CAVE","INFERNO"],
        "groupStorageSendImage":True,
        "levelNotifMessage":"%USERNAME% has levelled %SKILL%",
        "killCountBestTimeMessage":"%USERNAME% has defeated %BOSS% with a new personal best time of %TIME% and a completion count of %COUNT%",
        "collectionSendImage":True,
        "screenshotScale":100,
        "notifyChat":True,
        "diaryEnabled":True,
        "lootNotifMessage":"%USERNAME% has looted: \n\n%LOOT%\nFrom: %SOURCE%",
        "chatPatterns":"*\n\n",
        "deathNotifPvpMessage":"%USERNAME% has just been PKed by %PKER% for %VALUELOST% gp...",
        "groupStorageEnabled":False,
        "diaryMessage":"%USERNAME% has completed the %DIFFICULTY% %AREA% Achievement Diary, for a total of %TOTAL% diaries completed",
        "minLootValue":0,
        "pkMinValue":0,
        "notifyGrandExchange":False,
        "grandExchangeNotifyMessage":"%USERNAME% %TYPE% %ITEM% on the GE",
        "killCountPB":True,
        "discordRichEmbeds":False,
        "slayerSendImage":True,
        "tradeSendImage":True,
        "grandExchangeMinValue":100000,
        "xpInterval":5,
        "clueShowItems":False,
        "killCountMessage":"%USERNAME% has defeated %BOSS% with a completion count of %COUNT%",
        "groupStorageIncludePrice":True,
        "pkSkipFriendly":False,
        "lootRedirectPlayerKill":False,
        "gambleEnabled":True
    }

    return jsonify(dink_plugin_config)
